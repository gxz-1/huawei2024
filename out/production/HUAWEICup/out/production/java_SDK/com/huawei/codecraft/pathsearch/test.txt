package com.huawei.codecraft.backup;


import org.junit.Test;

import java.util.List;

public class test {
    // 创建一个50x50的网格地图，"."表示可行走，"*"和"#"表示障碍
    String[] grid = {
            "##################################################",
            "#................................................#",
            "#....####*****************.......................#",
            "#....#...........................................#",
            "#....#...........................................#",
            "#....#......#####################................#",
            "#....#...........................................#",
            "#....#...........................................#",
            "#....#......#####################................#",
            "#....#...........................................#",
            "#....#...........................................#",
            "#....#...........................................#",
            "#....#...........................................#",
            "#....#......#####################................#",
            "#....#...........................................#",
            "#....#...........................................#",
            "#................................................#",
            "#................................................#",
            "#......#.........................................#",
            "#......#.........................................#",
            "#......#.........................................#",
            "#......#.........................................#",
            "#......#.........................................#",
            "#......#.........................................#",
            "#................................................#",
            "#................................................#",
            "#................................................#",
            "#................................................#",
            "#................................................#",
            "#................................................#",
            "#................................................#",
            "#................................................#",
            "#................................................#",
            "#................................................#",
            "#................................................#",
            "#................................................#",
            "#................................................#",
            "#................................................#",
            "#................................................#",
            "#................................................#",
            "#................................................#",
            "#................................................#",
            "#................................................#",
            "#................................................#",
            "#................................................#",
            "#................................................#",
            "#................................................#",
            "#................................................#",
            "##################################################"
    };


    @Test
    public void jpstest() {
        // 设置起点和终点
        int startX = 1, startY = 4;
        int endX = 4, endY = 15;

        long startTime = System.currentTimeMillis();
        //TODO 创建JPS实例并寻找路径
        JpsPathSearch ps = new JpsPathSearch(grid);
        //使用A*
//        AStarPathSearch ps = new AStarPathSearch(grid);
        //使用dfs
//        dfsPathSearch ps = new dfsPathSearch(grid);

        List<Node> path = ps.findPath(startX, startY, endX, endY);
        long endTime = System.currentTimeMillis();
        // 打印路径
        System.out.println("执行时间："+(endTime-startTime)+"ms");
        System.out.println("距离为："+path.size());
        System.out.println("Path from (" + startX + ", " + startY + ") to (" + endX + ", " + endY + "):");
        if (path.isEmpty()) {
            System.out.println("No path found.");
        } else {
            for (Node nodev1 : path) {
                System.out.println("(" + nodev1.x + ", " + nodev1.y + ")");
            }
        }
    }
}
